#!/bin/bash

set -eu

log=/var/log/daemon.log

usage () {
    echo "usage: $0 [-q]"
    echo " tell whether the system clock is 'locked' (correct) or still being adjusted"
    echo " exits with 0 if it is correct"
    echo " options:  -q  only exit with exit code, do not print"
    echo
    echo " IMPORTANT: only valid if called late in the day, i.e. some"
    echo " time after the log ($log) may have been rotated the last"
    echo " time. Also, assumes that openntpd is being used. Also, assumes"
    echo " that 'date' returns the time in the same time zone as the one used"
    echo " for the log."
    exit 1
}

if [ $# -eq 1 ]; then
    if [ "$1" = "-q" ]; then
	opt_q=1
    else
	usage
    fi
else
    if [ $# -eq 0 ]; then
	opt_q=0
    else
	usage
    fi
fi

possibly_echo () {
    if [ $opt_q = 0 ]; then
	echo "$@"
    fi
}

# I hope I'm cutting at the right places?

assert_datepart () {
    echo "$1" | perl -wne '/^[A-Z][a-z]{2,3} +\d+ *$/ or die "'"`printf '%q' "$0"`"': invalid cut-out?: $_"'
}

curday="`date|cut -c5-11`"

assert_datepart "$curday"

tmpfile1="`mktemp`"
trap 'rm "$tmpfile1"' EXIT
declare -a remember
grep 'ntpd.*adjusting local clock by' /var/log/daemon.log|tail -1|cut -c1-7 > "$tmpfile1"
remember=("${PIPESTATUS[@]}")
test "${remember[2]}" -eq 0
test "${remember[1]}" -eq 0

if test "${remember[0]}" -eq 0; then
    lastlogentry="`cat "$tmpfile1"`"
    assert_datepart "$lastlogentry"

    if [ "$curday" = "$lastlogentry" ]; then
	# nope, clock was still in adjusting phase not long ago
	possibly_echo "no"
	exit 2
    else
	possibly_echo "yes"
	exit 0
    fi
else
    # missing matches are accepted
    if test "${remember[0]}" -eq 1; then
	possibly_echo "yes"
	exit 0
    else
	exit 1
    fi
fi
