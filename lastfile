#!/usr/bin/perl -w

# Don Aug 19 00:23:44 MEST 2004
(my $email='pflanze%gmx,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [directory [directory2 ..]]
  Outputs name of the last modified *file* which does not begin with a
  dot or ~ or end in ~ in given directory. Default directory is '.'.

  --fullpath     full path (including directory) is output, not just
                 the filename.
  -a|--all       don't ignore dot files
  --allow-empty  if a directory has no files after filtering, continue
                 without showing a result (the default is to stop with
                 an error).

  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

my @args;
my $DEBUG=0;
my $opt_fullpath;
my $opt_allow_empty;
my $opt_a;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
    } elsif (/^--?a(ll)?$/) {
	$opt_a=1;
    } elsif (/^--?allow-empty?$/) {
	$opt_allow_empty=1;
    } elsif (/^--?full(?:-?path(?:=(.*))?)?$/) {
        if (defined $1) {
            $opt_fullpath=$1
        } else {
            $opt_fullpath=1
        }
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}

$opt_fullpath = 1
  if @args > 1;

sub showit {
    my ($dir)=@_;
    #use Chj::singlequote; warn "dir=".singlequote($dir);
    opendir DIR, $dir
      or die "opendir '$dir': $!";
    $dir=~ s|/+\z||s;
    # ^ for path appending. so that '/' still works for opendir.

    my @items;
    while (defined ($_=readdir DIR)){
	next if ($_ eq "." or $_ eq "..");
	next if (not $opt_a and (/^[.~]/ or /~\z/));
        my @s=lstat "$dir/$_" or die "lstat '$dir/$_': $!";
        if (-f _) {
	    push @items,[$opt_fullpath ? "$dir/$_" : $_,
			 $s[9]];
	}
    }

    if (@items) {
	print(
	      (sort { $b->[1] <=> $a->[1] } @items)[0]->[0]
	     );# heh, -> after the [0] is necessary here
	print "\n";
    } else {
        die "$myname: directory does not contain any choosable files: '$dir'"
            unless $opt_allow_empty;
    }
}

if (@args) {
    for (@args) {
	showit $_
    }
} else {
    showit "."
}
