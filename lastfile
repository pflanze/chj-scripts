#!/usr/bin/perl -w

my $copyright= <<'COPYRIGHT';
# Copyright 2004-2022 by Christian Jaeger <ch@christianjaeger.ch>
# Published under the same terms as perl itself
COPYRIGHT
my ($email_full)= $copyright=~ / by ([^\n]*)/s;

use strict;

my @excludes= qw(HEUTE CALENDAR);
my %exclude = map {$_ => 1} @excludes;
my $excludesstr= "[".join(
    ", ", map{ my $s = $_; $s=~ s/'/\\'/sg; "'$s'" } @excludes)."]";

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);

my $dir_or_file = $myname;
$dir_or_file=~ s/last//;

my @dir_or_file= qw(dir file);
my %dir_or_file = do { my $i = 0; map { $_=> $i++ } @dir_or_file };
my $want_file = $dir_or_file{$dir_or_file};
my $other_dir_or_file = $dir_or_file[! $want_file];

sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [directory [directory2 ..]]
  Outputs the name of the last modified *$dir_or_file*[1] in the given directory
  that does not begin with a dot or ~ or end in ~, or matches one of
  the entries in $excludesstr.

  Default directory is '.'.

  --fullpath     full path (including directory) is output, not just
                 the filename.
  -a|--all       don't ignore dot files
  --allow-empty  if a directory has no files after filtering, continue
                 without showing a result (the default is to stop with
                 an error).

  [1] Also see: last$other_dir_or_file

  ($email_full)
";
exit @_ ? 1 : 0;
}

my @args;
my $DEBUG=0;
my $opt_fullpath;
my $opt_allow_empty;
my $opt_a;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
    } elsif (/^--?a(ll)?$/) {
	$opt_a=1;
    } elsif (/^--?allow-empty?$/) {
	$opt_allow_empty=1;
    } elsif (/^--?full(?:-?path(?:=(.*))?)?$/) {
        if (defined $1) {
            $opt_fullpath=$1
        } else {
            $opt_fullpath=1
        }
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}

$opt_fullpath = 1
  if @args > 1;

sub showit {
    my ($dir)=@_;
    opendir my $in, $dir
      or die "opendir '$dir': $!";
    $dir=~ s|/+\z||s;
    # ^ for appending items, so that '/' still works for opendir.

    my $lastitem; # maybe [ $filename, $mtime, $possibly_fullpath ]
    while (defined ($_=readdir $in)){
	next if ($_ eq "." or $_ eq "..");
	next if (not $opt_a and (/^[.~]/ or /~\z/));
        next if $exclude{$_};
        my @s=lstat "$dir/$_" or die "lstat '$dir/$_': $!";
        if ($want_file ? -f _ : -d _) {
            my $t = $s[9];
            my $lastt;
            if (not defined $lastitem
                or
                do {
                    $lastt = $lastitem->[1];
                    $t > $lastt
                }
                or
                ($t == $lastt
                 and ($lastitem->[0] cmp $_) < 0)) {
                $lastitem = [ $_, $t, ($opt_fullpath ? "$dir/$_" : $_) ];
            }
	}
    }
    closedir $in or die "close for '$dir': $!";

    if (defined $lastitem) {
	print($lastitem->[2], "\n")
            or die "stdout: $!";
    } else {
        die "$myname: directory does not contain any choosable files: '$dir'"
            unless $opt_allow_empty;
    }
}

if (@args) {
    for (@args) {
	showit $_
    }
} else {
    showit "."
}
