#!/usr/bin/perl -w

(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;
my $myname= "term";

use strict;
use POSIX qw(setsid);
# COPY from Chj::singlequote
sub singlequote_sh {
    @_ >= 1 and @_ <= 2 or die "1-2";
    my ($str, $alternative) = @_;
    if (defined $str) {
        $str =~ s/\'/'\\\''/sg;
        "'$str'"
    } else {
        defined($alternative) ? $alternative : "undef"
    }
}

my $opt_fg=0;
my @perhaps_agent;

LP: {
    if (@ARGV>=1) {
        if ($ARGV[0]=~ /^--?h(elp)?$/) {
            die "Open an urxvt terminal nicely. Usage:

Open in the current directory:

  term

Open in another directory (relative paths are resolved by bash (based
on \$PWD), not the kernel):

  term dir {terminal args}

To prevent term from daemonizing (i.e. forking as a child (returning
immediately) and running setsid):

  term --fg {other args}

If '--agent' is given as the first argument then the second argument
is taken to be an executable run with the terminal command (including
arguments) as its arguments.

If the first argument starts with a dash then it is (together with all
other arguments) passed to urxvt--e.g.:

  term -e cmd args..

";
        } elsif ($ARGV[0] eq '--agent') {
            push @perhaps_agent,
              ($ARGV[1] // die "$myname: --agent given but no further argument");
            shift @ARGV;
            shift @ARGV;
            redo LP;
        } elsif ($ARGV[0]=~ /^--?f(g)?$/) {
            $opt_fg=1;
            shift @ARGV;
            redo LP;
        }
    }
}


# HACK to fix encoding so that international keyboard input works (*sigh*)
if ($ENV{LANG} eq "C") {
    # XX probably not working if locale not generated? Well, sucks.
    $ENV{LANG}="de_CH.UTF-8";
}

my $font= $ENV{RXVT_UNICODE_FONT} || "Inconsolata";
my $fontsize= $ENV{RXVT_UNICODE_FONTSIZE} || 18;
# ^ keep in sync with 'rxvt-fontsize'!

$font=~ /^\w[\w ]*\w$/s
  or die "invalid font format: $font";
$fontsize=~ /^\d+$/s
  or die "invalid fontsize format: $fontsize";


sub runterminal {

    # setting to xterm seems to work? whereas without it
    #  (older) debian (without urxvt installed) usually gives
    # "Cannot find terminfo entry for 'rxvt-unicode'"

    # Instead of just calling chdir, we use the shell's (bash's) cd
    # functionality to save as much of the PWD variable as possible.

    my @scriptlines= "set -eu";
    my $chdir= sub {
        my ($path)=@_;
        push @scriptlines, "cd ".singlequote_sh($path);
    };
    my $run= sub {
        my (@args)=@_;
        push @scriptlines,
          "exec ".join(" ",
                       map {
                           singlequote_sh $_
                       }
                       (@perhaps_agent,
                        "urxvt",
                        "-fn", "xft:$font:pixelsize=$fontsize",
                        "-tn", "xterm",
                        ($> == 0 ? ("-bg", "#ffd8d8") : ()),
                        @args));
        my $script= join("\n",@scriptlines);
        warn "script='$script'"
            if $ENV{TERM_DEBUG};
        exec "/bin/bash", "-c", $script
          or exit 127;
    };
    if (@ARGV>=1 and
        # and stat $ARGV[0]
        #and  regex? but relative paths. no way.
        #just make sure options won't do wrong:
        not $ARGV[0]=~ /^-/
       ) {
        &$chdir($ARGV[0]);
        shift @ARGV;
        &$run(@ARGV);
    } else {
        &$run(@ARGV)
    }
}


if ($opt_fg) {
    runterminal
} else {
    my $pid=fork;
    defined
      $pid or die "fork: $!";
    if ($pid) {
        exit 0;#well. bugg.buti dontcarenow
    } else {
        setsid or die $!;
        runterminal
    }
}

