#!/usr/bin/perl -w

# Wed 11 Nov 10:58:27 GMT 2020
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict; use warnings FATAL => 'uninitialized';

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname patchfile...

  Split the given patchfile(s) into new files so that each new file
  only contains the part of the patch for one particular target file.

  Options:

    --hunks    Split on hunk boundaries, too.
    --quiet    Do not print the generated files.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
my $verbose=0;
my $opt_hunks;
my $opt_quiet;
#our $opt_dry;
GetOptions("verbose"=> \$verbose,
           "quiet"=> \$opt_quiet,
           "help"=> sub{usage},
           "hunks"=> \$opt_hunks,
           #"dry-run"=> \$opt_dry,
           ) or exit 1;
usage unless @ARGV;

use Chj::xtmpfile;
use Chj::xopen 'xopen_read';
use Chj::xperlfunc 'xprintln';


sub rewrite_head {
    my ($file, $head, $prefix)= @_;
    $head=~ s/(\nsubject: *(?:\[PATCH\] *)?)([^\n]*)/$1$prefix$2/si
        or warn "could not find subject in head of file: '$file'";
    $head
}

sub write_diff {
    my ($head, $diff, $origpath)=@_;
    my ($fileb)= $diff=~ /^diff.* (\S+)/
        or die "missing file in first line of diff: '$diff'";
    my $prefix= $fileb;
    $prefix=~ s|^[ab]/||;
    my $addon= $prefix;
    $addon=~ s|/|_|sg;
    my $path= $origpath;
    $path=~ s{(^|/)([^/]+?)(\.[^.]+)?\z}{"$1$2-$addon".($3//"")}se;
    $path ne $origpath
        or die "path is the same as origpath, '$path'";
    if ($opt_hunks) {

        # Should really do some class(es), parse once, represent.
        my ($diffline, $indexline, $minus, $plus, $rest)=
            $diff=~ m{^
                      (diff\ [^\n]*)\n
                      (index\ [^\n]*)\n
                      (---\ [^\n]*)\n
                      (\+\+\+\ [^\n]*)\n
                      (.*)
                 }sx
                   or die "invalid patch file format: '$diff'";
        my @hunks= split /(?<=\n)(?=\@\@ )/, $rest;

        my $i= 0;
        for my $hunk (@hunks) {
            my $diff = join("\n",
                            $diffline,
                            # $indexline, needed for perms? fix it?
                            $plus,
                            $minus,
                            $hunk);
            my $i000 = sprintf('%03d', $i);
            my $path2= $path;
            $path2=~ s/\.patch$/-$i000.patch/
                or die "suffix wrong?";
            my $t= xtmpfile $path2;
            $t->xprint(rewrite_head($origpath, $head, "$prefix $i000: "),
                       $diff);
            $t->xclose;
            $t->xputback(0666);
            xprintln $t->path unless $opt_quiet;
            $i++;
        }
    } else {
        my $t= xtmpfile $path;
        $t->xprint(rewrite_head($origpath, $head, "$prefix: "),
                   $diff);
        $t->xclose;
        $t->xputback(0666);
        xprintln $t->path unless $opt_quiet;
    }
}

sub splitpatch {
    my ($path)=@_;
    my $cnt= xopen_read($path)->xcontent; ## unsafe
    $cnt=~ s/\n(?:-- \n(?:[^\n]*\n){0,3})?\z/\n/s;
    my ($head, @diffs)= split /(?<=\n)(?=diff )/, $cnt;
    @diffs or die "file does not appear to contain diffs: '$path'";
    for my $diff (@diffs) {
        write_diff $head, $diff, $path
    }
}


splitpatch $_ for @ARGV;

