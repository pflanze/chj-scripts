#!/usr/bin/perl -w

# cj Fri, 16 May 2003 10:52:39 +0200
# copied from is_if_up

use strict;

use Chj::Net::Publicip qw(publicip publicip_force);

$0=~ /([^\/]+)$/s or die "?";
my $myname=$1;
sub usage {
    print "$myname [-f|-a] [ interfaces to check ]
  Looks for an interface with an ip that doesn't look like a private
  network (by default checks @Chj::Net::Publicip::defaultifaces).
  Prints either nothing (and returns exit code 2) if no 
  interface is found, or prints the first ip found (and returns 0).
  (returns the exit code from ifconfig in case of error, probably 1)
  May return 0 but still no ip: if all checked interfaces were
  ok but none of them didn't look like a private net.

  Options:

  -f   If given, and no non-privetly looking ip is found, the first
       privately looking ip is printed.
  -a   All found ips are shown, not just publicly looking ones.
  -i   Show interface name(s) instead of ip(s)
";
exit;
}

my ($opt_f,$opt_a,$opt_i);
my @ifaces;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^-/) {
	if ($_ eq '-f'){
	    $opt_f=1;
	} elsif ($_ eq '-a'){
	    $opt_a=1;
	} elsif ($_ eq '-i'){
	    $opt_i=1;
	} else {
	    usage;
	}
    } else {
	push @ifaces,$_
    }
}

our $get= $opt_i ?
  \&Chj::Net::Publicip::_publiciface :
  \&Chj::Net::Publicip::_publicip;

if ($opt_a) {
    print map {"$_\n"} &$get($opt_f,@ifaces);
    exit Chj::Net::Publicip::last_best_exitcode;
} else {
    my $res= &$get($opt_f,@ifaces);
    if ($res) {
	print "$res\n";
	exit 0;
    } else {
	exit Chj::Net::Publicip::last_best_exitcode;
    }
}
