#!/usr/bin/perl -w

# Sam Feb  9 12:32:53 CET 2008
(my $email='pflanze%gmx,ch')=~ tr/%,/@./;

use strict;
our @known_types= qw(commit tree blob tag);

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname

  List all tags in the current git repository which are signed, sorted
  by their creation date.

  Options:
  -v|--invert show tags which are *not* signed
  --all       show all tags, also non-signed ones
  --non-annotated  only show non-annotated tags (implies --all)
  --verbose   show some warning(s)
  --type x    show tags pointing to objects of type x only
              (the usual ones: @known_types)

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

my $known_types= +{ map { $_=> 1} @known_types };

use Getopt::Long;
my $options={};
our $opt_type;
GetOptions($options,
	   "v|invert",
	   "all",
	   "non-annotated",
	   "help"=> sub{usage},
	   "type=s"=> sub {
	       my ($k,$t)=@_;
	       $$known_types{$t}
		 or die "$myname: unknown type '$t'; we only know of: @known_types\n";
	       $opt_type= $t;
	   },
	   "verbose",
	   #"debug",
	  )
  or exit 1;
usage if @ARGV;
our $verbose= $$options{verbose};


use Chj::IO::Command;
use Chj::Git::Functions qw(maybe_cat_tag parse_tag);

sub getsignedtagsparsedandsorted {
    my $ls= Chj::IO::Command->new_sender("git","tag","-l");
    my $curried_xor= sub {
	my ($v)=@_;
	$$options{v} ? !$v : $v
    };
    my $res= [
	      sort {
		  ($a->maybe_unixtime <=> $b->maybe_unixtime
		   or
		   $a->name cmp $b->name)
	      }
	      grep {
		  my $t= $opt_type && $_->dereferenced_type;
		  (
		   ($t ? $t eq $opt_type : 1)
		   and
		   ($$options{"non-annotated"} ?
		    not($_->is_annotated)
		    :
		    ($$options{all}
		     ||
		     &$curried_xor($_->is_signed)))
		  )
	      }
	      map { chomp; parse_tag($_, maybe_cat_tag ($_),$verbose) }
	      <$ls>
	     ];
    $ls->xxfinish;
    $res
}

for (@{ getsignedtagsparsedandsorted() }) {
    print localtime($_->maybe_unixtime)."\t".$_->name."\t".($_->maybe_tagger||"")."\n";
}
