#!/usr/bin/perl -w

# Fri Apr 30 07:41:08 EDT 2010
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

use Chj::xopen 'xopen_read';

sub cmd {
    my ($inpfile)=@_;
    # checks:
    my ($file,$suff)= $inpfile=~ m/(.*)\.(rej|patch|diff)$/
      or die "file '$inpfile' does not have a nice suspected suffix";
    if ($suff eq "rej") {
	# ok
    } elsif (($suff eq "patch") or ($suff eq "diff")) {
	# check for only containing one file; and which one
	my $in= xopen_read $inpfile;
	my @files;
	while (<$in>) {
	    #if (/^diff )
	    if (my ($file0)= /^--- (.*)/) {
		local $_= <$in>; defined $_ or die;
		if (my ($file1)= /^\+\+\+ (.*)/) {
		    # assume that -p1 is to be used with this patch...
		    $file0=~ s|[^/]+/+|| or die;
		    $file1=~ s|[^/]+/+|| or die;
		    if ($file1 eq $file0) {
			push @files, $file0
		    } else {
			die "bug? not the same files, $file0  vs $file1"
		    }
		} else {
		    die "broken patch?, --- not followed by +++"
		}
	    }
	}
	$in->xclose;
	@files==1 or die "not exactly 1 file found in patch, but: @files";
	# mutate
	$file= $files[0];
    } else { die "?" }
    # run:
    ("wiggle","--replace",$file,$inpfile)
}

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    my $somefile= "somefile.rej";
    my @cmd= cmd $somefile;
    print "$myname $somefile

  Run @cmd

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   ) or exit 1;
usage unless @ARGV==1;

use Chj::xperlfunc;

sub wiggle {
    my ($rejfile)=@_;
    my @cmd= cmd $rejfile;
    xxsystem @cmd
}

wiggle $_ for @ARGV;

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;
