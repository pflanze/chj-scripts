#!/usr/bin/perl -w

# Tue Oct 18 17:15:38 EDT 2011
(my $email='chrjae%gmail,com')=~ tr/%,/@./;

# {Mon Nov 28 04:47:01 2011}
# hm, this won't be safe.

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname user_or_dir file(s)

  Copy file(s) to user, into a new randomly named subdirectory in the
  DROP dir in the user's home, or, if user_or_dir contains slashes,
  a subdir of that path.

  Options:
   -l  hardlink instead of copy
   -c  copy (now default)
   -o  open up permissions to world readable (now default)

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
our $opt_link;
our $opt_copy=1;
our $opt_o=1;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   "link"=> \$opt_link,
	   "copy"=> \$opt_copy,
	   "open"=> \$opt_o,
	   ) or exit 1;
usage unless @ARGV;

our $user_or_dir= shift @ARGV;

use Chj::xperlfunc ':all';

sub xcopy {
    my ($from,$to)=@_;
    xxsystem "cp", "-a", "--", $from, $to
}

our $do= do {
    if ($opt_link) {
	if ($opt_copy) {
	    usage "both --link and --copy given";
	} else {
	    \&xlink
	}
    } else {
	if ($opt_copy) {
	    \&xcopy
	} else {
	    \&xrename
	}
    }
};

use Chj::Random::Formatted 'random_passwd_string';

sub xpermcheck {
    my ($path, $str)=@_;
    my $p= xstat ($path)->permissions_oct;
    $p eq $str
      or die "permissions on '$path' are not $str (but '$p')";
}


our $targetbase=
    $user_or_dir=~ m|/| ? do {
        my $s= $user_or_dir;
        $s=~ s{/+\z}{}s;
        my @p= split m{/+}, $s;
        if ($s=~ m{^/} and @p == 3) {
            # a home dir
            "$s/DROP"
        } else {
            $user_or_dir
        }
    }
  : "/home/$user_or_dir/DROP"; # XX do it right (with getpwnam)?

xpermcheck $targetbase, "3733";

our $targetsubdir= $targetbase."/".random_passwd_string (16);
xmkdir $targetsubdir;
xchmod 0770, $targetsubdir;


sub possibly_fix_perms {
    my ($path)=@_;
    if ($opt_o) {
	my $s= xlstat $path;
	if (! $s->is_file) {
	    die "not a file: '$path'";
	}
	my $perms= $s->permissions;
	my $wantperms= $perms | 0444;
	if ($perms != $wantperms) {
	    xchmod $wantperms, $path
	}
    }
}

for my $path (@ARGV) {
    my $filename= basename $path;
    my $targetpath= $targetsubdir."/".$filename;
    $do->( $path, $targetpath );
    possibly_fix_perms ($targetpath);
}

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;

