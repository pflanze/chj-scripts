#!/usr/bin/perl -w
# cj Fri, 17 Sep 2004 21:57:23 +0200
# cj Sat, 01 Jan 2005 18:41:18 +0100 von ...multiplemp3s kopiert und mod für ogg, versuch jedenf.
#   och mann es gibt eh Error opening fun.ogg using the oggvorbis module.  The file may be corrupted.   mann isch das zäh  --> also noch untested ob das ev geht mit guten ogg files. forget fm4 streams.


use strict;

my $PORT= $ENV{PORT}||1112;

if (! @ARGV or @ARGV==1 and $ARGV[0] eq "-h") {
    print "bitte filename angeben des files das tail'ed und served werden soll
  Das ist ein quickhack eines streaming servers, der für proxybetrieb gedacht ist.
  Ein File, das per getmpradio runtergezogen wird, kann (*muss*) *während* des runterladens
  hiermit wieder offeriert werden. Als Port wird $PORT verwendet (per \$PORT overridebar).

  --radius   48 statt 44.1 input (eigentlich sollte es es von ogg's output selber lesen!!)
             (recoden nach 44.1 output)
  --48       48 statt 44.1 input (eigentlich sollte es es von ogg's output selber lesen!!)
             (kein recoding, wird als 48 ins mp3 getan)
  --mono     statt stereo

  sonstige optionen, z.B. -k hh:mm:ss werden an ogg123 gegeben.
";
    exit 1
}

#nachträglicheingeführtes options prozessig:
our $opt_radius;
our $opt_48;
our $opt_mono;
{
    my @A=@ARGV;
    my @B= map {
	if (/^--?radius$/) {
	    $opt_radius=1;
	    ()
	} elsif (/^--?48$/) {
	    $opt_48=1;
	    ()
	} elsif (/^--?mono$/) {
	    $opt_mono=1;
	    ()
	} else {
	    $_
	}
    } @A;
    @ARGV=@B;
}

#warn "opt_radius=$opt_radius";


print "serving from port $PORT\n";

use Chj::xperlfunc;
use Chj::xpipe;
#use Chj::xpipeline 'xreceiverpipeline';

use Chj::singlequote 'singlequote_many';

sub Vxexec {
    warn "exec'ing ".singlequote_many (@_);
    xexec @_;
}

my ($r,$w)=xpipe;
if (my $pid=xfork) {
    eval {
	$r->xclose;
	my $icyname= join (" ",map {
	    my $n=$_;
	    $n=~ s|.*/||s;
	    $n=~ s|'|\\'|sg;
	    "'$n'";
	} @ARGV);
	my $msg=
qq{ICY 200 OK
icy-notice1: <BR>This stream requires <a href="http://www.winamp.com/">Winamp</a><BR>
icy-notice2: SHOUTcast Distributed Network Audio Server/SolarisSparc v1.9.2<BR>
icy-name: $icyname
icy-genre: Trance Techno Dance
icy-url: http://www.di.fm
icy-pub: 1
icy-metaint: 0
icy-br: 96
icy-irc: #shoutcast
icy-icq: 0
icy-aim: N/A

};
	$msg=~ s/\n/\r\n/sg;
	$w->xprint($msg);
	$w->xflush;

	my ($r2,$w2)=xpipe;
	if (my $pid=xfork) {
	    eval {
		$r2->xclose;
		$w2->xdup2(1);
		$w2->xclose;
		$w->xclose;#hm, not too fast? nö wenn forked dann ischer doch kept.
		#xxsystem qw(/usr/bin/mpg123 -w -),@ARGV;  falsch, wav ist zu kurz und drum lame fertig.
		#xxsystem qw(/usr/bin/mpg123 -s -),@ARGV;  besser, aber "ahaaa" es tut - als erstes als stdin mann übersehen
		# xxsystem qw(/usr/bin/mpg123 -s),@ARGV;
		# #och  nun noch  jung at the beginning.
		xxsystem qw(/usr/bin/ogg123 -d raw -f - ),@ARGV;#ps muss -d raw VOR -f angeben  fuck isch das mühsam.
	    };
	    if ($@) {
		print STDERR $@;
		kill $pid or warn $!;
	    }
	    #warn "goigntowait1";
	    #ach, v.a. das muss mann:!!!!
	    close STDOUT or warn $!;
	    wait;
	} else {
	    $w2->xclose;
	    $r2->xdup2(0);
	    $r2->xclose;
	    $w->xdup2(1);
	    $w->xclose;
	    if ($opt_radius) {
		#xexec "sox -t raw -x -s -w -r 48000 - -t raw -x -s -w -r 44100 - resample |lame -r -x - -"
		#xexec "sox -t raw -x -s -w -r 48000 - -t raw -x -s -w -r 44100 - resample echo 0.6 0.9 10000 0.6 |lame -r -x - -"
		#xexec "sox -t raw -x -s -w -r 44100 - -t raw -x -s -w -r 44100 - flanger 0.5 0.5 3.0 0.6  1.4 |lame -r -x - -"
		# mensch man darf eben nicht resampling  verlangen  zusammen mit irgend einem von denen  buggy tool das.
		xexec
		  #"sox -t raw -x -s -w -r 48000 - -t raw -x -s -w -r 44100 - resample" WOOWOWOWWOOW  bis ich merke das s dies mono draus macht. und ersch no falsch wohl rechnet deswegen!!!!!
		  #"sox -t raw -s -w -r 48000 - -t raw -s -w -r 44100 - resample" #(bzgl. -x: "(hör grad nix gross falsch aber wird schon falsch sein)")
		  "sox -t raw -c 2 -x -s -w -r 48000 - -t raw -c 2 -x -s -w -r 44100 - resample" #so ist richtig.
		  #."|sox -t raw -x -s -w -r 44100 - -t raw -x -s -w -r 44100 - flanger 0.5 0.5 3.0 0.6  1.4"
		  #."|sox -t raw -x -s -w -r 44100 - -t raw -x -s -w -r 44100 - echo 0.5 0.5 60 0.6"
		    ."|lame -r -x - -"
	    } else {
		Vxexec (qw(lame -r -x),
			($opt_48 ? qw(-s 48) : ()),
			($opt_mono ? qw(-m m) : ()),
			qw( - -),
		      );#WOW. endlich geht es auch mit dem -x
	    }
	}

    };
    if ($@) {
	print STDERR $@;
	kill $pid or warn $!;
    }
    #close STDOUT or warn $!;
    #$w->xclose; oder schon in parent nach fork. ah dort stehts eh scho
    warn "waiting 2";
    wait;# nun ist leider /usr/bin/mpg123 so ein geiles kommando dass es mit 0 exitet obwohl input file not found. hm, immerhin  mit  close STDOUT unten netcat abschliessen? nein, nix isch. ach.

} else {
    $r->xdup2(0);
    $r->xclose;
    $w->xclose;
    #close STDOUT or die $!;
    xexec qw(netcat -q 1 -l -p), $PORT
}


