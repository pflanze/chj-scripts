#!/usr/bin/perl -w

#I already did that somewhere.... sgh


# Thu Jan 20 13:38:31 EST 2011
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [file(s)]

  remove hex numbers from objdump style disassembly

  Options
   --gambit  also remove differences due to .oX object file endings

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
our $opt_gambit;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   "gambit"=> \$opt_gambit,
	   #"dry-run"=> \$opt_dry,
	   ) or exit 1;
#usage unless @ARGV;

our $hexdigit= "0-9a-f";
our $hex1byte= "\\b[$hexdigit]{2}\\b";
our $hexnumber= "\\b[$hexdigit]+\\b";

sub substitute {
    "X" x length($_[0])
}

while (<>) {
    if ($opt_gambit) {
	s/\b(___\w+_2e_o)(\d+)\b/$1."YY"/ge;
    }
    # for intel only atm...
    if (my ($pre, $adr, $w1, $bytecode, $w2, $opcode, $rest)=
	m/^(\s*)($hexnumber):(\s*)((?:$hex1byte\s)+)(\s*)(\w+)(.*)/
       ) {
	$rest=~ s/\b(0x)?([$hexdigit]{3,}\b)/($1 ? $1 : "").substitute $2/ge;
	print " ".$pre.substitute($adr).":".$w1.substitute($bytecode).$w2
	  .$opcode.$rest."\n"
	  #ordie
    } else {
	print "# $_"  # or die? but, sigpipe anyway?....  r i less faire
    }
}


#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;
