#!/usr/bin/perl -w

# Wed Nov  6 20:31:01 GMT 2013
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname

  Call trash ('tra') on untracked files in the current git working
  directory (by default, only files under CWD and below).

  Options:
    -a   also trash files outside the CWD.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
our $opt_all;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   "all"=> \$opt_all,
	   ) or exit 1;
usage if @ARGV;

use Chj::IO::Command;

sub git_prefix {
    my $c= Chj::IO::Command->new_sender(qw"git rev-parse --show-prefix");
    my $res= $c->xcontent;
    $c->xxfinish;
    # sigh, git tools really are not consistent. There's no -z flag
    # for rev-parse.
    chomp $res;
    $res
}

sub git_cdup {
    my $c= Chj::IO::Command->new_sender(qw"git rev-parse --show-cdup");
    my $res= $c->xcontent;
    $c->xxfinish;
    # sigh, git tools really are not consistent. There's no -z flag
    # for rev-parse.
    chomp $res;
    $res
}

sub ls {
    my $ls= Chj::IO::Command->new_sender
      ("git","status",
       "-z",
       ($opt_all ? () : ".")
      );
    my $prefix= git_prefix;
    local $/ = "\0";
    my @f;
    while (<$ls>) {
	chomp;
	#warn "seeing '$_'";
	if (/^\?\? (.*)/s) {
	    my $path=$1; # full path at this point
	    if ($opt_all) {
		# sigh, now I also have to diff the path? Or, require
		# the caller to chdir there. Ugly
		push @f, $path
	    } else {
		if ($path=~ s/^\Q$prefix//s) {
		    push @f, $path
		}
	    }
	} else {
	    #warn "ignoring '$_'";
	}
    }
    $ls->xxfinish;
    @f
}

use Chj::xperlfunc;

if ($opt_all) {
    xchdir git_cdup
}
xexec "trash", "--", ls

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;
