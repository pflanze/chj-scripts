#!/usr/bin/perl -w

# Mit Jan 30 12:27:49 CET 2008
(my $email='pflanze%gmx,ch')=~ tr/%,/@./;

# A wrapper around pdftotext to check, if given, the second argument
# for existance. I don't want to have my pdf files overwritten just
# because I gave it pdftotext *.pdf (argh)

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);

use Chj::Unix::SuperPATH;
use Chj::xperlfunc 'Xlstat';
use Getopt::Long;

our @origargv= @ARGV;

my $options={};
GetOptions($options,
	   'f=s',# actually i but who bothers
	   'l=s',
	   'layout',
	   'raw',
	   'htmlmeta',
	   'enc',
	   'eol=s',
	   'nopgbrk',
	   'opw=s',
	   'upw=s',
	   'q',
	   'cfg',
	   'v',
	   'h',
	  )
  or die "$0: there are unknown/invalid options, maybe you're using a newer version of pdftotext than this wrapper is written for, so adapt my source code";


our $super=sub { #you ask why I put it into scalar space? because, I dunno, wrote the calls below like that, so I will write the declaration to fit them.
    xsuperexec $myname, @origargv;
};

if (@ARGV==2) {
    my ($from, $to)=@ARGV;
    if (Xlstat($to)) { # Xlstat is better than lstat: it checks for permission errors and the like. Ok you may say, why bother, if the path cannot be accessed super will also not be able to write it. well anyway.
	die "target path '$to' already exists";
    } else {
	&$super;
    }
} elsif (@ARGV==1) {
    &$super
} elsif (@ARGV>2) {
    die "too many paths given";
} else {
    # no paths given at all; should be safe.
    &$super;
}
