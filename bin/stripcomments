#!/usr/bin/perl -w
sub usage {
    print "$0 [-c|-p] [inputfile(s)]
  Strip comments, by default shell/perl like,
  if -c given, c and c++ like instead.
  if -p given, (try to) strip also pod sections. and __END__ parts.
  if -s given, strip lisp-like comments.

  WARNING: in pipe mode combined with -p, you should only pipe through
  one file. eg it will stop slurping when __END__ reached, and pod
  sections could extend over the next file otherwise.
";
    exit;
}
my ($opt_c,$opt_p,$opt_scheme);
my $DEBUG;
ARGPARSE:{ if (@ARGV){
    if ($ARGV[0] eq '-c') {
	$opt_c=1;
	shift;
    } elsif ($ARGV[0] eq '-p') {
	$opt_p=1;
	shift;
    } elsif ($ARGV[0] eq '-s') {
	$opt_scheme=1;
	shift;
    } elsif ($ARGV[0]=~ /^--?d(ebug)?$/) {# muss an erster stelle kommen!
	$DEBUG=1;
	shift;
	redo ARGPARSE;
    } else {
	usage
    }
}}

sub Do {
    if ($opt_c){
	while(<STDIN>){
	    s{/\*.*?\*/}{}g;
	    if (s{/\*.*}{}) {
		my $commentwasincomment= s{//.*}{};
		print unless /^\s*$/;
		if (!$commentwasincomment) {
		  Loop2:{
			while(<STDIN>){
			    if (s{.*?\*/}{}) {
				print unless /^\s*$/;
				last Loop2;
			    }
			}
			warn "input finished while in comment\n";
			exit;
		    }
		}
	    }
	    else {
		s{//.*}{};
		print unless /^\s*$/;
	    }
	}
    }
    elsif ($opt_p){
      OUTER:while(<STDIN>){
	    if (/^__END__\s*$/) {
	print "------__END__ found in OUTER -------\n" if $DEBUG;
		last OUTER;
	    }
	    if (/^=[a-z]\w+/i) {
	      INNER:while(<STDIN>){
		    if (/^__END__\s*$/) {#kopie hm hm
	print "------__END__ found in INNER-------\n" if $DEBUG;
			last OUTER;
		    }
		    if (/^=cut\b/) {
			next OUTER;
		    }
		}
		last OUTER;
	    }
	    print unless /^\s*(?:\#.*)?$/;
	}
	print "------ENDED OUTER-------\n" if $DEBUG;
    }
    elsif ($opt_scheme) {
	while(<STDIN>){
	    print unless /^\s*(?:\;.*)?$/;
	}
    }
    else {
	while(<STDIN>){
	    print unless /^\s*(?:\#.*)?$/;
	}
    }
}

if (@ARGV) {
    for (@ARGV) {
	open STDIN,"<$_" or die "could not open '$_': $!";
	Do;
	close STDIN;##totally required!!!!!!!!!!!!!!!!! wahnsinns staun. mann. sonst liest es nach neuem open noch daten vom alten file.
    }
} else {
    Do
}

