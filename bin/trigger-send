#!/usr/bin/perl -w

# Tags: (ipc)

# Mit Feb 13 13:35:53 CET 2008
(my $email='chrjae%gmail,com')=~ tr/%,/@./;

use strict;

my $protocol_version=2;

our $timeout=10;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname socketpath [ arguments ]

  Send a trigger message to a trigger-listen instance.  If arguments
  are given, those are sent with the message, but trigger-listen must
  have been started with --accept-arguments in this case or it will
  ignore the message.

  Options:
  --timeout seconds   instead of the default $timeout
  --inet       Interpret socketpath as listen address[:port] instead of
               filesystem path
  --wait       Wait for the command to finish, and exit with its exit code.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
our $opt_inet;
our $opt_wait;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   "timeout"=> \$timeout,
	   "inet"=> \$opt_inet,
	   "wait"=> \$opt_wait,
	  ) or exit 1;
usage unless @ARGV;

our $socketpath= shift @ARGV;

use Chj::schemestring 'schemestring_oneline';
use Chj::load;

our $IO_Socket_class= $opt_inet ? "IO::Socket::INET" : "IO::Socket::UNIX";

load $IO_Socket_class; import $IO_Socket_class;


$SIG{ALRM}= sub {
    die "$myname on '$socketpath': timed out\n";
};
alarm $timeout;

our $socket= $IO_Socket_class->new
  (
   Type=> &SOCK_STREAM,
   $opt_inet ? (Proto=> "tcp") : (),
   ($opt_inet ?
    do {
	my @spl= split ":", $socketpath;
	@spl == 2 or die "expecting addr:port, got: '$socketpath'";
	my ($addr,$port)=@spl;
	(PeerAddr=> $addr,
	 PeerPort=> $port)
    }
    : ("Peer"=> $socketpath)),
  )
  or die "opening socket '$socketpath': $!";#!

my $msg=
  "trigger $protocol_version:".($opt_wait ? "1" : "0").":".
  join("\t",map { schemestring_oneline $_ } @ARGV)
  ."\n";

$socket->send($msg)
  or die "send: $!"; # ah doesn't get here, socket->send already throws exceptions?

my $result= <$socket>;
chomp $result;

#warn "result='$result'";

if ($opt_wait) {
    if (my ($exitvalue)= $result=~ /^exitvalue: *(.*)/s) {
	die "bug" if $exitvalue < 0;
	my $exitcode= $exitvalue >> 8;
	my $signal= $exitvalue & 127;
	if ($signal) {
	    die "exited from signal $signal";
	} else {
	    exit $exitcode
	}
    } else {
	die "$myname: did get unexpected result: '$result'\n";
    }
}
else {
    $result=~ /(signalled|exitvalue|pid)/
      or die "$myname: did not get an ok from the server, but: '$result'\n";
}

$socket->close
  or die "close: $!";

