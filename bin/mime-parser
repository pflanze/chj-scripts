#!/usr/bin/perl -w

# Fre Aug  6 01:30:02 MEST 2004
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?"; 
my ($mydir, $myname)=($1,$2); 
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [file(s)]
  or stdin.
  Options:
  -h|--headers headername
                  print header value(s?)
  --last-header headername
                  print the header appearing last in the head text
                  (but might be the one having been added to the head
                  as the first in time)
  --first-header headername
                  print the header appearing first in the head text
  --no-cleanup    do not remove temporary directory created by parser
  --unpack        unpack all parts (recursively) to a tempdir the path
                  of which is printed to stdout

  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

use Getopt::Long;
our $verbose=0;
our ($opt_h,
     $opt_last_header,
     $opt_no_cleanup,
     $opt_first_header,
     $opt_unpack,
    );
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   "h|headers=s" => \$opt_h,
	   "last-header=s" => \$opt_last_header,
	   "first-header=s" => \$opt_first_header,
	   "no-cleanup" => \$opt_no_cleanup,
	   "unpack"=> \$opt_unpack,
	   ) or exit 1;
usage unless @ARGV;


use MIME::Parser;
use Chj::xopen 'xopen_read';
use Chj::singlequote;
use Chj::xtmpdir;

our $parser = new MIME::Parser;
$parser->output_under("/tmp");# IMPORTANT! or it will put them to cwd. -- wondering: IS THIS really SAFE?

sub parsemsg {
    my ($fh)=@_;
    my $ent= $parser->parse($fh);
    #use Data::Dumper;
    #print Dumper $ent;
    $ent
}

sub Count_true {
    my $count=0;
    for (@_) {
	$count++ if $_;
    }
    $count
}

usage "only give one of -h, --last-header or --first-header"
  if Count_true($opt_h, $opt_last_header, $opt_first_header)>1;

our $search_header= $opt_h || $opt_last_header || $opt_first_header;

if (@ARGV) {
    for (@ARGV) {
	print "File ".singlequote($_).":\n" if $verbose;
	my $f=xopen_read $_;
	local our $ent=parsemsg($f);
	eval {

	    if ($search_header) { #show header
		my $show= sub {
		    my ($prefix,$maybe_value)=@_;
		    if ($verbose) {
			print $prefix." ".singlequote($search_header)
			  .(defined ($maybe_value) ? ": ".singlequote($maybe_value) : "")
			    ."\n";
		    } else {
			if (defined $maybe_value) {
			    print $maybe_value;
			}
		    }
		};

		my $head=$ent->head;
		my @vals= $head->get($search_header);
		if (@vals==0) {
		    &$show("no such header");
		} else {
		    if ($opt_last_header) {
			print $vals[-1];
		    } elsif ($opt_first_header) {
			print $vals[0];
		    } else {
			if(@vals==1){
			    &$show("one such header",$vals[0]);
			} else {
			    my $i=0;
			    for(@vals){
				&$show("$i. header", $_);
				$i++;
			    }
			}
		    }
		}
	    } elsif ($opt_unpack) {
		my $outbase= xtmpdir;
		$outbase->autoclean(0);
		use Chj::repl;repl;
	    } else {
		#die "unknown command requested <--- unfinished";
	    }
	};
	my $e=$@;
	if ($opt_no_cleanup) {
	    print $parser->filer->output_dir."\n"
	} else {
	    eval {
		# btw not the $ent; *SICK*.
		#warn "running purge";
		#$parser->filer->purge;  WOW. does do nothing. and $ent does not have a filer method. -- ah only does not remove dir itself. ugh.
		#use Chj::repl;repl;
		my $filer= $parser->filer;
		$filer->purge;
		rmdir $filer->output_dir;
	    };
	    warn "error during cleanup: $@" if ref($@)||$@;
	}
	die $e if ref($e)||$e;
    }
}
else {
    parsemsg(*STDIN{IO});
}
