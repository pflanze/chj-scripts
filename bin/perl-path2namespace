#!/usr/bin/perl -w

# Mit Apr  9 23:44:40 MEST 2003
# pflanze@gmx.ch

use strict;

$0=~ /([^\/]+)$/s or die "?";
my $myname=$1;
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname [ options ]
  Filters for example the line
    'EL/Exception.pm line 95.'
  to
    'EL::Exception'

  Options:
  --no-use     don't print 'use ' before each line and ';' afterwards.
  --load   print 'load my \$Bar= \"Foo::Bar\";' instead (use Chj::load first!).
";
exit @_ ? 1 : 0;
}

use Getopt::Long;
our $DEBUG;
our $verbose=0;
our $opt_no_use;
our $opt_load;
GetOptions("verbose"=> \$verbose,
	   "debug"=> \$DEBUG,
	   "help"=> sub{usage},
	   "use"=> sub{$opt_no_use=0},
	   "no-use"=> sub{$opt_no_use=1},
	   "load"=> \$opt_load,
	   ) or exit 1;

sub turn {
    local $_= $_[0];
    if (m{(\S+\.pm)}) {
	my $path=$1;
	$path=~ s{^\./}{};
	$path=~ s{^(?:.*/)?(?:perl)?lib/+}{};
	my $class= $path;
	$class=~ s/\.pm$//;
	$class=~ s|/|::|sg;
	if ($path=~ m{^/}) { # absolute
	    if (-f $path) {
		if (open IN,"<$path") {
		    local $/;
		    my $content= <IN>;
		    close IN;
		  CHECK:{
			while ($content=~ m{\bpackage +([\w:]+)}g) {
			    my $namespace= $1;
			    if ($class=~ m/\Q$namespace\E$/) {
				warn "cutting '$class' down to '$namespace'\n"
				  if $DEBUG;
				$class= $namespace;
				last CHECK;
			    }
			}
			warn "could not find any package definition ".
			  "in '$path' matching it's path\n";
		    }
		} else {
		    warn "could not open '$path': $!\n";
		}
	    } else {
		warn "there is no such file as '$path'\n";
	    }
	}
	$opt_no_use ?
	  print "$class\n"
	    :
	      $opt_load ?
		do {
		    my $short=$class;
		    $short=~ s/.*:://s;
		    print "load my \$$short= \"$class\";\n";
		}
		  :
		    print "use $class;\n";
    }
}

if (@ARGV) {
    turn $_ for @ARGV;
} else {
    turn $_ while <STDIN>;
}



