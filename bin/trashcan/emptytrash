#!/usr/bin/perl -w

use strict; use warnings FATAL => 'uninitialized';

sub BEGIN {
    for my $i (0..$#ARGV) {
        if (lc($ARGV[$i]) eq '-t') {
            eval "sub DEBUG {1}";
            splice @ARGV, $i,1;
            return;
        }
    }
    eval "sub DEBUG {0}";
}
my $name= 'emptytrash';



use Chj::App::Trash;

my $trash= Chj::App::Trash->new->trashdir;


my $NOW= time;
my $DAYS;

if (@ARGV
    and ($ARGV[0]=~ /^--?h(elp)?$/
         or not $ARGV[0]=~ /^-c((?:\d+\.)?\d*)$/)
    or @ARGV>1) {

    die "$name [-c\$days] [-t]
  Empty your trash can ($trash), but only deleting 'old' items.

    -c\$days  Delete all top level items (folders/files) that
             were added to the trash more than 'days' ago. 
             (looks at inode change time).
             \$days may contain '.'. The default is 15.

     -t      testing only (no items will be deleted).
";

} else {
    $DAYS= $1;
    $DAYS= 15
      unless defined($DAYS) and length($DAYS)>0;

    print"DAYS=$DAYS\n" if DEBUG;

    run_c();
}



sub rm_rf ($) {
    my ($path)= @_;
    my $pid= fork;
    defined $pid or die "fork: $!";
    if ($pid) {
        waitpid $pid, 0
          or die "waitpid: $!";
        not $?
    } else {
        if (DEBUG) {
            #print"removing '$path'\n";
            exit(1)
        }else{
            exec ("/bin/rm", "-rf", "--", $path);
        }
    }
}


sub run_c {
    my $numdel=0;
    if (opendir D, $trash) {
        my @items= readdir D;
        close D;
        for my $item (@items) {
            next if $item eq '.' or $item eq '..';

            # determine inode change time
            if (my $ctime= (lstat("$trash/$item"))[10]) {
                my $days= ($NOW - $ctime) / (60*60*24);
                if (DEBUG) {
                    print $days > $DAYS ? 'OLD':'   ';
                    print "  Item '$item' is $days days old\n";
                }
                if ($days > $DAYS) {
                    rm_rf("$trash/$item")
                      and ++$numdel;
                }
            } else {
                warn "Could not stat '$trash/$item': $!\n";
                undef;
            }
        }
        print "Deleted $numdel top-level items from $trash\n";
    } else {
        warn "Could not open trash directory '$trash': $!\n";
    }
}

