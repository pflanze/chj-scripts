#!/usr/bin/perl -w

# Mon Oct 20 13:37:10 CEST 2008
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname basedir-for-outfiles upgrade|dist-upgrade [further apt stuff]

  Logs the current, then the afterwards installed package list/versions,
  and the listeners before and after.

  Note: sets vm ulimit to unlimited. But, if an error happens you'll
  be back in your shell where the unlimiting doesn't have
  effect. (Should I trap errors and run a subshell? Well don't think
  going fancy is worth it here.)

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   ) or exit 1;
usage unless @ARGV>=2;

our ($basedir, @upgrade)=@ARGV;##hm todo  -d  not trigger GetOptions as always echt .

use Chj::xperlfunc;
use Chj::singlequote 'singlequote_sh'; #statt quotemeta, wirklich notwendig?
use Chj::ulimit;
ulimit qw(-S -v unlimited);

our $logdir= do {
    # wieder mal..:?:
    my $subdir= `date_`; chomp $subdir; $subdir or die;
    "$basedir/$subdir/"
};

xmkdir $logdir;

sub dpkgli {
    my ($beforeafter)=@_;
    my $path= "$logdir/packages_$beforeafter.gz";
    xxsystem "COLUMNS=1000 dpkgli '*' | gzip > ".singlequote_sh($path);
    $path
}

sub listeners {
    my ($beforeafter)=@_;
    my $path= "$logdir/listeners_".$beforeafter;
    xxsystem "show-listeners -w > ".singlequote_sh ($path);
    $path
}

{
    use Chj::xtmpfile;
    my $f= xtmpfile "$logdir/commandline";
    $f->xprint(map { "$_\0" } @upgrade);
    $f->xclose;
    $f->xputback (0644);
}

my $dpkglibefore= dpkgli ("before");
my $listenersbefore= listeners ("before");

xxsystem "apt-get", @upgrade;#
#^ sollt ich tee machen ?
#  geht das brhpt?

my $dpkgliafter= dpkgli ("after");
my $listenersafter= listeners ("after");

xsystem "cj-guidiff", $listenersbefore, $listenersafter;


#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;
