#!/usr/bin/perl -w

# Tue Mar 26 09:04:16 GMT 2019
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict; use warnings FATAL => 'uninitialized';

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname

  Map list of mailline lines on stdin to list of filenames on stdout.

  Use e.g. like:  ".'for f in `mailline2list`; do mu "$f"; done'."
  then copy-paste lines from mailline.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   ) or exit 1;
usage if @ARGV;

use Chj::xopendir;
use Chj::xperlfunc 'xprintln';


# COPY from mailline
sub filenamepart {
    my ($s)=@_;
    $s=~ s|.*/||;
    $s=~ s|\..*||;
    $s
}

#our %part2filename= map { filenamepart($_) => $_ } xopendir(".")->xnread;
our $part2filename= do {
    my $d= xopendir(".");
    my %h;
    while (defined (my $item= $d->xnread)) { # and y  still   laurent
	if ($item=~ /^(\d{10})\b/) { # XX keep in sync with '/^(\d{10})\s/' below
	    my $p= filenamepart $item;
	    if (exists $h{$p}) {
		warn "duplicate entries for key '$p': '$h{$p}' and '$item'"
	    } else {
		$h{$p}= $item
	    }
	} else {
	    warn "ignoring directory entry '$item'"
	      unless $item eq "seen"; # my marker hack
	}
    }
    \%h
};

while (<STDIN>) {
    chomp;
    if (my ($t)= /^(\d{10})\s/) { # sync with above
	if (defined (my $fn= $$part2filename{$t})) {
	    xprintln $fn;
	} else {
	    warn "no file for '$t'";
	}
    } else {
	warn "ignoring line: '$_'";
    }
}

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;
