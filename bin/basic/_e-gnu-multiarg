#!/usr/bin/perl -w

use strict; use warnings FATAL => 'uninitialized';

my @files=
  (sub {
       my @orig_argv= @ARGV;
       my @pre;
       while (@ARGV) {
	   local $_= shift @ARGV;
	   if ($_ eq "--") {
	       if (@pre) {
		   warn "$0: can't currently deal with options, falling back to single call\n";
		   exec "_e-gnu", @orig_argv or exit 127;
	       } else {
		   # no arguments before "--"
		   return @ARGV
	       }
	   }
	   push @pre, $_;
       }
       @pre
   })->();


my @pid;

my $n= @files;
if ($n > 8) {
    require Chj::Util::AskYN;
    my $yn= Chj::Util::AskYN::maybe_askyn
	("$0: got $n arguments, do you really want to open so many windows?");
    exit 1
	unless $yn;
}

for (@files) {
    my $pid= fork; defined $pid or die "fork: $!";
    if ($pid) {
	push @pid, $pid
    } else {
	exec "_e-gnu", $_ or exit 127;
    }
}

for (@pid) {
    waitpid $_, 0 or die "waitpid $_: $!";
    $? == 0 or die "pid $_ exited with code $?";
}
