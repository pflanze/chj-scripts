#!/usr/bin/perl -w

# Sam Okt 25 23:37:47 MEST 2003
(my $email='pflanze%gmx,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?"; 
my ($mydir, $myname)=($1,$2); 
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname
  like printenv, but output in a way that can be read by sh
  Options:
  -s|--sort   sort on the keys.
  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

my @args;
my $DEBUG=0;
my($opt_sort);
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
    } elsif (/^--?s(sort)?$/) {
	$opt_sort=1;
#     } elsif (/^--?X(?:XXX(?:=(.*))?)?$/) {
#         if (defined $1) {
#             $XXX=$1
#         } else {
#             $XXX=$ARGV[++$i] or usage "missing argument for '$_' option";
#         }
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}
usage if @args;

sub escp {
    my $t=shift;
    $t=~ s/'/'\\''/sg;
    $t
}

sub maybe_sorted {
    if ($opt_sort) {
	sort @_
    } else {
	@_
    }
}

for (maybe_sorted keys %ENV) {
    print "export $_='".escp($ENV{$_})."'\n";
}
