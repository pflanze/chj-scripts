#!/usr/bin/perl -w

# Fre Mär 26 12:28:37 MET 2004
(my $email='XXX%YYY,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?"; 
my ($mydir, $myname)=($1,$2); 
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname ..

  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

my @args;
my $DEBUG=0;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
#     } elsif (/^--?X(?:XXX(?:=(.*))?)?$/) {
#         if (defined $1) {
#             $XXX=$1
#         } else {
#             $XXX=$ARGV[++$i] or usage "missing argument for '$_' option";
#         }
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}
usage if @args;

use Chj::Parse::Date::Ls;

my $parser= new Chj::Parse::Date::Ls "de_CH";#well, locale ignored currently.

#my %hash;
my @all;
while (<STDIN>) {
    eval {
	my $res= do {
	    if (/^[cb]/) {
		# link,
		if (/^\S{10} +\d+ +\S+ +\S+ +\d+\, +\d+ +(\S+ +\S+ +\S+) +/){
		    $parser->xparse($1);
		} else {
		    warn "invalide entry 1: $_";
		}

	    } else {
		if (/^\S{10} +\d+ +\S+ +\S+ +\d+ +(\S+ +\S+ +\S+) +/){
		    $parser->xparse($1);
		} else {
		    warn "invalide entry 2: $_";
		}
	    }
	};
	#$hash{$_}=$res;
	push @all,[$_,$res];
    };
    if ($@) {
	chomp;
	warn "$myname: error in input '$_': $@";
	push @all,[$_,0];
    }
}


for (sort { $a->[1] <=> $b->[1] } @all) {
    print $_->[0] or die $!;
}

    
