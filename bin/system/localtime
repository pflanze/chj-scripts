#!/usr/bin/perl -w

use strict;

our $arithmatch= qr{^[\d()+\-*/\s]+\z};
# ^wow is not parsed at that point (or unparsing is not done from the
# parsed tree): mentioning some char multuple times is carried over to
# the printing.

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname seconds-since-epoch|-

  Print localtime

  seconds-since-epoch may be an arithmetic expression matching
   $arithmatch

  When given -, filters stdin to stdout, replacing the number in the
  first column with the localtime string.

";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   ) or exit 1;
usage unless @ARGV==1;

sub one {
    my ($seconds_since_epoch)=@_;

    $seconds_since_epoch=~ /$arithmatch/
      or die "not a number or arithmetic expression: '$seconds_since_epoch'";

    my $rv= eval $seconds_since_epoch;
    die "$myname: $@" if $@;

    print localtime($rv)."\n"
      or die $!;
}

sub many {
    my ($in)=@_;
    while (<$in>) {
	s/^(\d{9,10})\b/localtime($1)/e;
	print or die $!;
    }
}

our ($arg)=@ARGV;
if ($arg eq "-") {
    many *STDIN{IO}
} else {
    one $arg
}

