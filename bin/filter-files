#!/usr/bin/perl -w

# Mit Feb 15 07:33:06 CET 2006
(my $email='pflanze%gmx,ch')=~ tr/%,/@./;

use strict;

$0=~ /(.*?)([^\/]+)\z/s or die "?"; 
my ($mydir, $myname)=($1,$2); 
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname

  filters newline-based input list of paths.

  ex.:  dpkgL foo|filter-files|myxargs_oneinvocation l
  shows only the contained files.

  items which don't exist are always suppressed.
  stat permission errors terminate the program.

  the program does lstat, so symlinks to files are not considered files.

  options:
  -l   instead of filtering for files, filter for symlinks
    -e   filter existing files (looks at target of symlinks)
    -ne  filter non-existing files (looks at target of symlinks)
  -x   filter executables (NOTE: symlinks are *not* allowed)
  -v   reverse operation: suppress files (or symlinks or executables)
       and nothing else (except nonexisting ones as said above)

  (Christian Jaeger <$email>)
";
exit @_ ? 1 : 0;
}

my @args;
my $DEBUG=0;
my $opt_v;
our $opt_l;
our $opt_e;
our $opt_ne;
our $opt_x;
for (my $i=0; $i<=$#ARGV; $i++) {
    local $_=$ARGV[$i];
    if (/^--?h(elp)?$/) {
    	usage
    } elsif ($_ eq '--') {
    	push @args, @ARGV[$i+1..$#ARGV];
    	last;
    } elsif (/^--?d(ebug)?$/) {
	$DEBUG=1;
    } elsif (/^--?v$/) {
	$opt_v=1;
    } elsif (/^--?l$/) {
	$opt_l=1;
    } elsif (/^--?e$/) {
	$opt_e=1;
    } elsif (/^--?ne$/) {
	$opt_ne=1;
    } elsif (/^--?x$/) {
	$opt_x=1;
    } elsif (/^-./) {
    	usage("Unknown option '$_'\n");
    } else {
    	push @args, $_
    }
}
usage if @args;

use Chj::xperlfunc 'Xlstat';

usage "both -l and -x given, not supported"
  if $opt_l && $opt_x;

usage "error: both -e and -ne given"
  if $opt_e && $opt_ne;

usage "error: -e and -ne are only valid with -l"
  if (($opt_e || $opt_ne) && ! $opt_l);

our $is=
  ($opt_l ? ($opt_e ? sub {$_[0]->is_link and -e $_[1]} :
	     $opt_ne ? sub {$_[0]->is_link and not -e $_[1]} :
	     sub {$_[0]->is_link}) :
   $opt_x ? sub {$_[0]->is_executable(0)} :
   sub {$_[0]->is_file});

while(<STDIN>) {
    chomp;
    if (my $s= Xlstat $_) {
	my $isfile= &$is($s, $_);
	print "$_\n" or die "$myname: printing to stdout: $!"
	  if ($isfile and !$opt_v) or (!$isfile and $opt_v); #xor bou
    }
}
