#!/usr/bin/perl -w

# Don Mai 14 17:08:17 BST 2015
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict; use warnings FATAL => 'uninitialized';
use experimental 'signatures';

use Chj::xperlfunc qw(dirname basename);

my $extensions_path = ".nonrenamed-extensions";

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname

  Show files in 'scratch' or similar folders, generated by
  'emacscratch', 'edat' scripts or similar, that have a generic date
  based name, and should use another name instead. Used by the
  'ren-nonrenamed' script.

  Optionally reads entries from the file '$extensions_path' (max. one
  entry per line, shell style comments starting with '#' and
  whitespace removed), that if added after a generic date, still makes
  '$myname' consider the file to need renaming. If '$extensions_path' 
  doesn't contain a slash, it is also searched in parent directories,
  up to the next directory that contains a .git subdirectory.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   ) or exit 1;
usage if @ARGV;

my $max_depth = 20;

# Looks for a file at $extensions_path, walking along ".." until it
# finds it or a dir with ".git" in it is encountered. Except if
# $maybe_depth is undef, don't go upwards; if it is, stops at
# $max_depth.
sub extensions($maybe_depth, $extensions_path) {
    if (-f $extensions_path) {
        require Chj::xopen;
        my $in = Chj::xopen::xopen_read($extensions_path);
        my @lines = $in->xreadline;
        $in->xclose;
        for (@lines) {
            s/#.*//s;
            s/\s+\z//s;
            s/^\s+//s;
        }
        grep { length $_ } @lines
    } else {
        if (defined($maybe_depth) and $maybe_depth <= $max_depth) {
            my $dir = dirname $extensions_path;
            if (-d "$dir/.git") {
                ()
            } else {
                extensions($maybe_depth + 1,
                           "$dir/../".basename($extensions_path))
            }
        } else {
            ()
        }
    }
}

my @extensions = extensions(($extensions_path=~ m{/} ? undef : 0), $extensions_path);

our @files = grep {
    not /~$/
} (
    glob("???_?????????????????????[0-9]"),
    glob("???_??????????????????????[0-9]"),
    # those created in US locale:
    glob("???_[0-9]{,[0-9]}_???_[0-9][0-9][0-9][0-9]_??????_{AM,PM}_???"),
    # de_CH locale:
    glob("??_[0-9]{,[0-9]}_???_[0-9][0-9][0-9][0-9]_??????_???{,?}"),
    (
     # New dat style format: "2024-04-24_1615_Wed"
     map {
         glob("[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]_".
              "[0-9][0-9][0-9][0-9]_???{,?}$_")
     } (@extensions, "")
    ),
    (
     # New dat style format: "2024-04-24_161501_Wed"
     map {
         glob("[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]_".
              "[0-9][0-9][0-9][0-9][0-9][0-9]_???{,?}$_")
     } (@extensions, "")
    )
    );

if (@files) {
    exec "l", "--", @files
      or exit 127; #forever which exit code?
}

#use Chj::ruse;
#use Chj::Backtrace; use Chj::repl; repl;
